local Players = game:GetService("Players")
local plr = Players.LocalPlayer

-- ====== –ù–ê–°–¢–†–û–ô–ö–ò –î–õ–Ø R6 ======
local IDS_R6 = {
    Head = 0,                  -- üëë –ì–æ–ª–æ–≤–∞
    Hair = 0,                  -- üíá –í–æ–ª–æ—Å—ã
    FaceAccessory = 40859238,  -- üòé –ú–∞—Å–∫–∞/–æ—á–∫–∏
    Neck = 0,                  -- üìø –ù–∞ —à–µ—é
    Front = 132777343388787,   -- üé≠ –°–ø–µ—Ä–µ–¥–∏ (–≥—Ä—É–¥—å)
    Back = 14825669068,        -- üéí –ü–ª–∞—â/–∑–∞ —Å–ø–∏–Ω—É
    Waist = 132857686458039,   -- üåÄ –ù–∞ –ø–æ—è—Å
    Shoulder = 0,              -- üß• –ù–∞ –ø–ª–µ—á–æ
    Hat = 71210472812229,      -- üé© –®–ª—è–ø–∞ (–ü–ê–ù–ê–ú–ö–ê)
    Shirt = 3633830051,   -- üëï –û–¥–µ–∂–¥–∞
    Pants = 6400069495,   -- üëñ –®—Ç–∞–Ω—ã
    TShirt = 0,                -- üëï –§—É—Ç–±–æ–ª–∫–∞
}

-- üîß –ö–û–û–†–î–ò–ù–ê–¢–´ –î–õ–Ø R6 (–ú–ï–ù–Ø–ô–¢–ï –ó–î–ï–°–¨!)
local OFFSETS_R6 = {
    [40859238] = {pos = Vector3.new(0, 0.3, -0.3), rot = Vector3.new(0, 0, 0)},       -- –ú–∞—Å–∫–∞
    [14825669068] = {pos = Vector3.new(0, -0.5, 1), rot = Vector3.new(0, 180, 0)},    -- –ü–ª–∞—â (Back)
    [132857686458039] = {pos = Vector3.new(0, -1.6, 0.01), rot = Vector3.new(0, 180, 0)}, -- Waist
    [132777343388787] = {pos = Vector3.new(0, 0.20, -0.10), rot = Vector3.new(0, 0, 0)}, -- Front (–≥—Ä—É–¥—å)
    [71210472812229] = {pos = Vector3.new(0, 0.01, 0), rot = Vector3.new(-10, 180, 0)},    -- Hat
}

-- ====== –ù–ê–°–¢–†–û–ô–ö–ò –î–õ–Ø R15 ======
local IDS_R15 = {
    Head = 0,                  -- üëë –ì–æ–ª–æ–≤–∞
    Hair = 0,                  -- üíá –í–æ–ª–æ—Å—ã
    FaceAccessory = 40859238,  -- üòé –ú–∞—Å–∫–∞/–æ—á–∫–∏
    Neck = 0,                  -- üìø –ù–∞ —à–µ—é
    Front = 132777343388787,   -- üé≠ –°–ø–µ—Ä–µ–¥–∏ (–≥—Ä—É–¥—å)
    Back = 14825669068,        -- üéí –ü–ª–∞—â/–∑–∞ —Å–ø–∏–Ω—É
    Waist = 132857686458039,   -- üåÄ –ù–∞ –ø–æ—è—Å
    Shoulder = 0,              -- üß• –ù–∞ –ø–ª–µ—á–æ
    Hat = 71210472812229,      -- üé© –®–ª—è–ø–∞ (–ü–ê–ù–ê–ú–ö–ê)
    Shirt = 3633830051,   -- üëï –û–¥–µ–∂–¥–∞
    Pants = 6400069495,   -- üëñ –®—Ç–∞–Ω—ã
    TShirt = 0,                -- üëï –§—É—Ç–±–æ–ª–∫–∞
}

-- üîß –ö–û–û–†–î–ò–ù–ê–¢–´ –î–õ–Ø R15 (–ú–ï–ù–Ø–ô–¢–ï –ó–î–ï–°–¨!)
local OFFSETS_R15 = {
    [40859238] = {pos = Vector3.new(0, 0.3, -0.3), rot = Vector3.new(0, 0, 0)},       -- –ú–∞—Å–∫–∞
    [14825669068] = {pos = Vector3.new(0, -0.8, 1.1), rot = Vector3.new(0, 180, 0)},    -- –ü–ª–∞—â (Back)
    [132857686458039] = {pos = Vector3.new(0, -0.8, 0.05), rot = Vector3.new(0, 180, 0)}, -- Waist
    [132777343388787] = {pos = Vector3.new(0, 0.01, -0.1), rot = Vector3.new(0, 0, 0)}, -- Front (–≥—Ä—É–¥—å)
    [71210472812229] = {pos = Vector3.new(0, 0.1, 0), rot = Vector3.new(-10, 180, 0)},    -- Hat
}

-- üë§ –õ–∏—Ü–æ
local FACE_ASSET_ID = 22828351
local FACE_IMAGE_ID = 7074724

-- ====== –°–ò–°–¢–ï–ú–ù–´–ï –§–£–ù–ö–¶–ò–ò ======
local function loadAsset(id)
    if id == 0 then return nil end
    local success, result = pcall(function()
        return game:GetObjects("rbxassetid://"..id)[1]
    end)
    return success and result or nil
end

local function findTextureInAsset(obj)
    if not obj then return nil end
    for _, child in ipairs(obj:GetDescendants()) do
        if child:IsA("Decal") and child.Texture ~= "" then
            return child.Texture
        end
    end
    if obj:IsA("Decal") and obj.Texture ~= "" then
        return obj.Texture
    end
    return nil
end

local function getHead(character)
    return character:FindFirstChild("Head") or character:WaitForChild("Head", 3)
end

local function clearPreviousAccessories(character)
    -- –°–ø–∏—Å–æ–∫ –∞–∫—Å–µ—Å—Å—É–∞—Ä–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å (–Ω–µ —É–¥–∞–ª—è—Ç—å)
    local preservedAccessories = {
        "Hair", "Hairstyle", "HairAccessory", "HeadHair", "HairHat"
    }
    
    for _, accessory in ipairs(character:GetChildren()) do
        if accessory:IsA("Accessory") then
            -- –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —ç—Ç–æ—Ç –∞–∫—Å–µ—Å—Å—É–∞—Ä
            local shouldPreserve = false
            for _, preservedName in ipairs(preservedAccessories) do
                if string.find(accessory.Name:lower(), preservedName:lower()) then
                    shouldPreserve = true
                    break
                end
            end
            
            if not shouldPreserve then
                accessory:Destroy()
            end
        end
    end
    
    local mask = character:FindFirstChild("MaskFace")
    if mask then mask:Destroy() end
    
    local head = getHead(character)
    if head then
        local face = head:FindFirstChild("face")
        if face then face:Destroy() end
    end
end

local function setHeadFace(head, texture)
    if not head or not texture then return false end
    
    local face = head:FindFirstChild("face")
    if not face then
        face = Instance.new("Decal")
        face.Name = "face"
        face.Face = Enum.NormalId.Front
        face.Parent = head
    end
    face.Texture = texture
    return true
end

local function createFaceAccessory(character, texture)
    local head = getHead(character)
    if not head then return false end
    
    local accessory = Instance.new("Accessory")
    accessory.Name = "MaskFace"
    
    local handle = Instance.new("Part")
    handle.Name = "Handle"
    handle.Size = Vector3.new(1, 1, 0.1)
    handle.Transparency = 1
    handle.CanCollide = false
    handle.Parent = accessory
    
    local decal = Instance.new("Decal")
    decal.Face = Enum.NormalId.Front
    decal.Texture = texture
    decal.Parent = handle
    
    accessory.Parent = character
    
    local weld = Instance.new("Weld")
    weld.Part0 = head
    weld.Part1 = handle
    weld.C0 = CFrame.new(0, 0, -0.5)
    weld.Parent = handle
    
    return true
end

local function findFirstOfClass(obj, className)
    if obj:IsA(className) then return obj end
    for _, child in ipairs(obj:GetChildren()) do
        local result = findFirstOfClass(child, className)
        if result then return result end
    end
    return nil
end

local function wearAccessory(id, character, offsets)
    if id == 0 then return end
    
    local asset = loadAsset(id)
    if not asset then
        warn("[CUSTOM] –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∞—Å—Å–µ—Ç: " .. id)
        return
    end

    local handle = asset:FindFirstChild("Handle") or asset:FindFirstChildWhichIsA("BasePart")
    if handle and offsets[id] then
        -- –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ —Ç–∞–∫–æ–π –∞–∫—Å–µ—Å—Å—É–∞—Ä
        local accessoryName = asset.Name
        local existingAccessory = character:FindFirstChild(accessoryName)
        if existingAccessory then
            existingAccessory:Destroy()
        end
        
        asset.Parent = character
        handle.Anchored = false
        handle.CanCollide = false

        local weld = Instance.new("Weld")
        local attachPart = character:FindFirstChild("Head")

        if id == IDS_R6.Back or id == IDS_R15.Back then
            attachPart = character:FindFirstChild("Torso") or character:FindFirstChild("UpperTorso")
        elseif id == IDS_R6.Waist or id == IDS_R15.Waist then
            attachPart = character:FindFirstChild("Torso") or character:FindFirstChild("LowerTorso")
        elseif id == IDS_R6.Front or id == IDS_R15.Front then
            attachPart = character:FindFirstChild("Torso") or character:FindFirstChild("UpperTorso")
        elseif id == IDS_R6.Hat or id == IDS_R15.Hat then
            attachPart = character:FindFirstChild("Head")
        end

        if attachPart then
            weld.Part0 = attachPart
            weld.Part1 = handle
            
            local offset = offsets[id]
            
            local cf = CFrame.new(offset.pos) * 
                      CFrame.Angles(0, math.rad(offset.rot.Y), 0) *
                      CFrame.Angles(math.rad(offset.rot.X), 0, 0) *
                      CFrame.Angles(0, 0, math.rad(offset.rot.Z))
            
            weld.C0 = cf
            weld.Parent = handle
            
            print(string.format("[CUSTOM] –ê–∫—Å–µ—Å—Å—É–∞—Ä %d: pos=%s, rot=%s", 
                id, tostring(offset.pos), tostring(offset.rot)))
        else
            warn("[CUSTOM] –ù–µ –Ω–∞–π–¥–µ–Ω–∞ —Ç–æ—á–∫–∞ –∫—Ä–µ–ø–ª–µ–Ω–∏—è –¥–ª—è –∞–∫—Å–µ—Å—Å—É–∞—Ä–∞: " .. id)
        end
        return
    end

    local shirt = findFirstOfClass(asset, "Shirt")
    local pants = findFirstOfClass(asset, "Pants")
    local tshirt = findFirstOfClass(asset, "ShirtGraphic")

    if shirt then
        local oldShirt = character:FindFirstChildOfClass("Shirt")
        if oldShirt then oldShirt:Destroy() end
        shirt.Parent = character
    elseif pants then
        local oldPants = character:FindFirstChildOfClass("Pants")
        if oldPants then oldPants:Destroy() end
        pants.Parent = character
    elseif tshirt then
        local oldTshirt = character:FindFirstChildOfClass("ShirtGraphic")
        if oldTshirt then oldTshirt:Destroy() end
        tshirt.Parent = character
    end

    if asset.Parent == nil then
        asset:Destroy()
    end
end

-- ====== –û–°–ù–û–í–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø ======
local function applyCustomization(character)
    local humanoid = character:FindFirstChildOfClass("Humanoid")
    if not humanoid then return end

    local IDS, OFFSETS
    if humanoid.RigType == Enum.HumanoidRigType.R6 then
        IDS, OFFSETS = IDS_R6, OFFSETS_R6
        print("[CUSTOM] –û–±–Ω–∞—Ä—É–∂–µ–Ω R6")
    else
        IDS, OFFSETS = IDS_R15, OFFSETS_R15
        print("[CUSTOM] –û–±–Ω–∞—Ä—É–∂–µ–Ω R15")
    end

    -- –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–∏—Ö –≤–æ–ª–æ—Å–∞—Ö –ø–µ—Ä–µ–¥ –æ—á–∏—Å—Ç–∫–æ–π
    local savedHair = {}
    for _, accessory in ipairs(character:GetChildren()) do
        if accessory:IsA("Accessory") then
            local accessoryName = accessory.Name:lower()
            if string.find(accessoryName, "hair") then
                table.insert(savedHair, accessory:Clone())
            end
        end
    end

    clearPreviousAccessories(character)

    -- –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤–æ–ª–æ—Å—ã –ø–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏
    for _, hair in ipairs(savedHair) do
        hair.Parent = character
    end

    local faceTexture = nil
    local faceAsset = loadAsset(FACE_ASSET_ID)
    if faceAsset then
        faceTexture = findTextureInAsset(faceAsset)
    end
    if not faceTexture and FACE_IMAGE_ID ~= 0 then
        faceTexture = "rbxassetid://" .. FACE_IMAGE_ID
    end

    if faceTexture then
        local head = getHead(character)
        if head then
            local success = setHeadFace(head, faceTexture)
            if not success then
                createFaceAccessory(character, faceTexture)
            end
        end
    end

    for slotName, assetId in pairs(IDS) do
        if assetId ~= 0 then
            wearAccessory(assetId, character, OFFSETS)
            task.wait(0.05)
        end
    end

    print("[CUSTOM] –ö–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∞! –í–æ–ª–æ—Å—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã.")
end

-- ====== –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ï –ü–†–ò–ú–ï–ù–ï–ù–ò–ï ======
if plr.Character then
    task.wait(0.5)
    applyCustomization(plr.Character)
end

plr.CharacterAdded:Connect(function(character)
    task.wait(1)
    applyCustomization(character)
end)

return function()
    if plr.Character then
        applyCustomization(plr.Character)
    end
end
